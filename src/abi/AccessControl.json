{
  "contractName": "AccessControl",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shopSKUTypes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "checkRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "InterfaceId_ERC165",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skuItems",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_SYMBOL",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shopToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skus",
      "outputs": [
        {
          "name": "shopId",
          "type": "uint256"
        },
        {
          "name": "skuId",
          "type": "uint256"
        },
        {
          "name": "skuTypeId",
          "type": "uint256"
        },
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "consumable",
          "type": "bool"
        },
        {
          "name": "limited",
          "type": "bool"
        },
        {
          "name": "limit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownedItems",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "franchiseBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "franchiseFeePercent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownedShops",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skuTypes",
      "outputs": [
        {
          "name": "shopId",
          "type": "uint256"
        },
        {
          "name": "skuTypeId",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_SYS_ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "skuTypeSKUs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shops",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "shopId",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "fiat",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shopItems",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_SHOP_OWNER",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shopSKUs",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "shopId",
          "type": "uint256"
        },
        {
          "name": "itemId",
          "type": "uint256"
        },
        {
          "name": "skuTypeId",
          "type": "uint256"
        },
        {
          "name": "skuId",
          "type": "uint256"
        },
        {
          "name": "consumed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ROLE_FRANCHISE_OWNER",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "shopBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContractPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContractUnpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000601c60006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040805190810160405280601081526020017f496e41707050726f53686f704974656d000000000000000000000000000000008152506040805190810160405280600481526020017f4941505300000000000000000000000000000000000000000000000000000000815250620000d66301ffc9a77c010000000000000000000000000000000000000000000000000000000002620002bf640100000000026401000000009004565b620001136380ac58cd7c010000000000000000000000000000000000000000000000000000000002620002bf640100000000026401000000009004565b62000150634f558e797c010000000000000000000000000000000000000000000000000000000002620002bf640100000000026401000000009004565b81600690805190602001906200016892919062000524565b5080600790805190602001906200018192919062000524565b50620001bf63780e9d637c010000000000000000000000000000000000000000000000000000000002620002bf640100000000026401000000009004565b620001fc635b5e139f7c010000000000000000000000000000000000000000000000000000000002620002bf640100000000026401000000009004565b50506001601c60006101000a81548160ff02191690831515021790555062000269336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e0000000000000000000000000000008152506200037d640100000000026401000000009004565b620002b9336040805190810160405280601481526020017f726f6c652f6672616e63686973652d6f776e65720000000000000000000000008152506200037d640100000000026401000000009004565b620005d3565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200031157600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6200040c826000836040518082805190602001908083835b602083101515620003bc578051825260208201915060208101905060208303925062000395565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020620004c66401000000000262003670179091906401000000009004565b8173ffffffffffffffffffffffffffffffffffffffff167fbfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489826040518080602001828103825283818151815260200191508051906020019080838360005b83811015620004875780820151818401526020810190506200046a565b50505050905090810190601f168015620004b55780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200056757805160ff191683800117855562000598565b8280016001018555821562000598579182015b82811115620005975782518255916020019190600101906200057a565b5b509050620005a79190620005ab565b5090565b620005d091905b80821115620005cc576000816000905550600101620005b2565b5090565b90565b6136fa80620005e36000396000f300608060405260043610610225576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ba75391461022a57806301ffc9a71461027557806306fdde03146102d9578063081812fc14610369578063095ea7b3146103d65780630988ca8c1461042357806318160ddd146104ac57806318821400146104d757806319fa8f5014610567578063217fe6c6146105d057806323b872dd1461067157806327bcfd61146106de5780632a905318146107295780632cf0d92a146107b95780632f745c591461082657806335007f0e146108875780633f4ba83a146109d257806342842e0e146109e95780634284653414610a56578063477e2b3c14610ab75780634b2aecdc14610ae25780634f558e7914610b0d5780634f6ccce714610b5257806351b4fc7e14610b93578063531e005b14610bf457806356de8ccd14610d145780635c975abb14610da45780635ded461a14610dd35780636352211e14610e1e5780636af04a5714610e8b57806370a0823114610ee2578063713aca7414610f3957806371587988146110f15780637ceab6b0146111345780637e1ae9761461117f5780638456cb591461120f578063910339401461122657806395d89b4114611271578063a22cb46514611301578063b88d4fde14611350578063bfb231d214611403578063c87b56dd14611497578063cb1b20011461153d578063e659ebef146115cd578063e985e9c51461160e575b600080fd5b34801561023657600080fd5b5061025f6004803603810190808035906020019092919080359060200190929190505050611689565b6040518082815260200191505060405180910390f35b34801561028157600080fd5b506102bf60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506116b9565b604051808215151515815260200191505060405180910390f35b3480156102e557600080fd5b506102ee611721565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032e578082015181840152602081019050610313565b50505050905090810190601f16801561035b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037557600080fd5b50610394600480360381019080803590602001909291905050506117c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e257600080fd5b50610421600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611800565b005b34801561042f57600080fd5b506104aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611945565b005b3480156104b857600080fd5b506104c16119c6565b6040518082815260200191505060405180910390f35b3480156104e357600080fd5b506104ec6119d3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561052c578082015181840152602081019050610511565b50505050905090810190601f1680156105595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561057357600080fd5b5061057c611a0c565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156105dc57600080fd5b50610657600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611a33565b604051808215151515815260200191505060405180910390f35b34801561067d57600080fd5b506106dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611aba565b005b3480156106ea57600080fd5b506107136004803603810190808035906020019092919080359060200190929190505050611bc7565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b5061073e611bf7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077e578082015181840152602081019050610763565b50505050905090810190601f1680156107ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107c557600080fd5b506107e460048036038101908080359060200190929190505050611c30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083257600080fd5b50610871600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c63565b6040518082815260200191505060405180910390f35b34801561089357600080fd5b506108b260048036038101908080359060200190929190505050611cda565b604051808a815260200189815260200188815260200187815260200180602001806020018615151515815260200185151515158152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101561092857808201518184015260208101905061090d565b50505050905090810190601f1680156109555780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b8381101561098e578082015181840152602081019050610973565b50505050905090810190601f1680156109bb5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b3480156109de57600080fd5b506109e7611e81565b005b3480156109f557600080fd5b50610a54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f24565b005b348015610a6257600080fd5b50610aa1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f5c565b6040518082815260200191505060405180910390f35b348015610ac357600080fd5b50610acc611f8c565b6040518082815260200191505060405180910390f35b348015610aee57600080fd5b50610af7611f92565b6040518082815260200191505060405180910390f35b348015610b1957600080fd5b50610b3860048036038101908080359060200190929190505050611f98565b604051808215151515815260200191505060405180910390f35b348015610b5e57600080fd5b50610b7d6004803603810190808035906020019092919050505061200a565b6040518082815260200191505060405180910390f35b348015610b9f57600080fd5b50610bde600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612042565b6040518082815260200191505060405180910390f35b348015610c0057600080fd5b50610c1f60048036038101908080359060200190929190505050612072565b604051808581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610c6f578082015181840152602081019050610c54565b50505050905090810190601f168015610c9c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610cd5578082015181840152602081019050610cba565b50505050905090810190601f168015610d025780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610d2057600080fd5b50610d296121e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d69578082015181840152602081019050610d4e565b50505050905090810190601f168015610d965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610db057600080fd5b50610db961221a565b604051808215151515815260200191505060405180910390f35b348015610ddf57600080fd5b50610e08600480360381019080803590602001909291908035906020019092919050505061222d565b6040518082815260200191505060405180910390f35b348015610e2a57600080fd5b50610e496004803603810190808035906020019092919050505061225d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9757600080fd5b50610ea06122db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eee57600080fd5b50610f23600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612301565b6040518082815260200191505060405180910390f35b348015610f4557600080fd5b50610f6460048036038101908080359060200190929190505050612385565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610fe4578082015181840152602081019050610fc9565b50505050905090810190601f1680156110115780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561104a57808201518184015260208101905061102f565b50505050905090810190601f1680156110775780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156110b0578082015181840152602081019050611095565b50505050905090810190601f1680156110dd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110fd57600080fd5b50611132600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b2565b005b34801561114057600080fd5b5061116960048036038101908080359060200190929190803590602001909291905050506126b3565b6040518082815260200191505060405180910390f35b34801561118b57600080fd5b506111946126e3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111d45780820151818401526020810190506111b9565b50505050905090810190601f1680156112015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561121b57600080fd5b5061122461271c565b005b34801561123257600080fd5b5061125b60048036038101908080359060200190929190803590602001909291905050506127c0565b6040518082815260200191505060405180910390f35b34801561127d57600080fd5b506112866127f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112c65780820151818401526020810190506112ab565b50505050905090810190601f1680156112f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561130d57600080fd5b5061134e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612892565b005b34801561135c57600080fd5b50611401600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506129ce565b005b34801561140f57600080fd5b5061142e60048036038101908080359060200190929190505050612a0d565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182151515158152602001965050505050505060405180910390f35b3480156114a357600080fd5b506114c260048036038101908080359060200190929190505050612a85565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156115025780820151818401526020810190506114e7565b50505050905090810190601f16801561152f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561154957600080fd5b50611552612b4e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611592578082015181840152602081019050611577565b50505050905090810190601f1680156115bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156115d957600080fd5b506115f860048036038101908080359060200190929190505050612b87565b6040518082815260200191505060405180910390f35b34801561161a57600080fd5b5061166f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b9f565b604051808215151515815260200191505060405180910390f35b6015602052816000526040600020818154811015156116a457fe5b90600052602060002001600091509150505481565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117b95780601f1061178e576101008083540402835291602001916117b9565b820191906000526020600020905b81548152906001019060200180831161179c57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061180b8261225d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561184857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061188857506118878133612b9f565b5b151561189357600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6119c2826000836040518082805190602001908083835b602083101515611981578051825260208201915060208101905060208303925061195c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020612c3390919063ffffffff16565b5050565b6000600a80549050905090565b6040805190810160405280601081526020017f496e41707050726f53686f704974656d0000000000000000000000000000000081525081565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b6000611ab2836000846040518082805190602001908083835b602083101515611a715780518252602082019150602081019050602083039250611a4c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020612c4c90919063ffffffff16565b905092915050565b80611ac53382612ca5565b1515611ad057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611b0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611b4857600080fd5b611b528483612d3a565b611b5c8483612e3d565b611b668383613055565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b601860205281600052604060002081815481101515611be257fe5b90600052602060002001600091509150505481565b6040805190810160405280600481526020017f494150530000000000000000000000000000000000000000000000000000000081525081565b60136020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611c6e83612301565b82101515611c7b57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611cc757fe5b9060005260206000200154905092915050565b600f81815481101515611ce957fe5b9060005260206000209060080201600091509050806000015490806001015490806002015490806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dad5780601f10611d8257610100808354040283529160200191611dad565b820191906000526020600020905b815481529060010190602001808311611d9057829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e4b5780601f10611e2057610100808354040283529160200191611e4b565b820191906000526020600020905b815481529060010190602001808311611e2e57829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16908060070154905089565b611ec0336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff161515611edb57600080fd5b6000601c60006101000a81548160ff0219169083151502179055507f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f9460405160405180910390a1565b80611f2f3382612ca5565b1515611f3a57600080fd5b611f5684848460206040519081016040528060008152506129ce565b50505050565b601960205281600052604060002081815481101515611f7757fe5b90600052602060002001600091509150505481565b60115481565b60125481565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006120146119c6565b8210151561202157600080fd5b600a8281548110151561203057fe5b90600052602060002001549050919050565b60146020528160005260406000208181548110151561205d57fe5b90600052602060002001600091509150505481565b600e8181548110151561208157fe5b9060005260206000209060040201600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121395780601f1061210e57610100808354040283529160200191612139565b820191906000526020600020905b81548152906001019060200180831161211c57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121d75780601f106121ac576101008083540402835291602001916121d7565b820191906000526020600020905b8154815290600101906020018083116121ba57829003601f168201915b5050505050905084565b6040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e00000000000000000000000000000081525081565b601c60009054906101000a900460ff1681565b60166020528160005260406000208181548110151561224857fe5b90600052602060002001600091509150505481565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156122d257600080fd5b80915050919050565b601c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561233e57600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600d8181548110151561239457fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561246c5780601f106124415761010080835404028352916020019161246c565b820191906000526020600020905b81548152906001019060200180831161244f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561250a5780601f106124df5761010080835404028352916020019161250a565b820191906000526020600020905b8154815290600101906020018083116124ed57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125a85780601f1061257d576101008083540402835291602001916125a8565b820191906000526020600020905b81548152906001019060200180831161258b57829003601f168201915b5050505050905085565b6125f1336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff16151561260c57600080fd5b80601c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b601a602052816000526040600020818154811015156126ce57fe5b90600052602060002001600091509150505481565b6040805190810160405280600f81526020017f726f6c652f73686f702d6f776e6572000000000000000000000000000000000081525081565b61275b336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff1615151561277757600080fd5b6001601c60006101000a81548160ff0219169083151502179055507fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d26760405160405180910390a1565b6017602052816000526040600020818154811015156127db57fe5b90600052602060002001600091509150505481565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128885780601f1061285d57610100808354040283529160200191612888565b820191906000526020600020905b81548152906001019060200180831161286b57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128cd57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816129d93382612ca5565b15156129e457600080fd5b6129ef858585611aba565b6129fb8585858561312c565b1515612a0657600080fd5b5050505050565b601081815481101515612a1c57fe5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6060612a9082611f98565b1515612a9b57600080fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b425780601f10612b1757610100808354040283529160200191612b42565b820191906000526020600020905b815481529060010190602001808311612b2557829003601f168201915b50505050509050919050565b6040805190810160405280601481526020017f726f6c652f6672616e63686973652d6f776e657200000000000000000000000081525081565b601b6020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612c3d8282612c4c565b1515612c4857600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080612cb18361225d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d2057508373ffffffffffffffffffffffffffffffffffffffff16612d08846117c3565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d315750612d308185612b9f565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16612d5a8261225d565b73ffffffffffffffffffffffffffffffffffffffff16141515612d7c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612e395760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6000806000612e4c858561334e565b60096000858152602001908152602001600020549250612eb86001600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061347d90919063ffffffff16565b9150600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515612f0657fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515612f6057fe5b90600052602060002001819055506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612fbc57fe5b9060005260206000200181905550600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361301c919061361f565b50600060096000868152602001908152602001600020819055508260096000838152602001908152602001600020819055505050505050565b60006130618383613496565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806009600084815260200190815260200160002081905550505050565b60008061314e8573ffffffffffffffffffffffffffffffffffffffff166135f0565b151561315d5760019150613345565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613252578082015181840152602081019050613237565b50505050905090810190601f16801561327f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156132a157600080fd5b505af11580156132b5573d6000803e3d6000fd5b505050506040513d60208110156132cb57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b8173ffffffffffffffffffffffffffffffffffffffff1661336e8261225d565b73ffffffffffffffffffffffffffffffffffffffff1614151561339057600080fd5b6133e36001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561348b57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561350457600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135a96001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461360390919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6000818301905082811015151561361657fe5b80905092915050565b81548183558181111561364657818360005260206000209182019101613645919061364b565b5b505050565b61366d91905b80821115613669576000816000905550600101613651565b5090565b90565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820faf18a05d1505f52ed48d2fa9c41bfa3ab17ecb2553d8059e9d857074fa497720029",
  "deployedBytecode": "0x608060405260043610610225576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ba75391461022a57806301ffc9a71461027557806306fdde03146102d9578063081812fc14610369578063095ea7b3146103d65780630988ca8c1461042357806318160ddd146104ac57806318821400146104d757806319fa8f5014610567578063217fe6c6146105d057806323b872dd1461067157806327bcfd61146106de5780632a905318146107295780632cf0d92a146107b95780632f745c591461082657806335007f0e146108875780633f4ba83a146109d257806342842e0e146109e95780634284653414610a56578063477e2b3c14610ab75780634b2aecdc14610ae25780634f558e7914610b0d5780634f6ccce714610b5257806351b4fc7e14610b93578063531e005b14610bf457806356de8ccd14610d145780635c975abb14610da45780635ded461a14610dd35780636352211e14610e1e5780636af04a5714610e8b57806370a0823114610ee2578063713aca7414610f3957806371587988146110f15780637ceab6b0146111345780637e1ae9761461117f5780638456cb591461120f578063910339401461122657806395d89b4114611271578063a22cb46514611301578063b88d4fde14611350578063bfb231d214611403578063c87b56dd14611497578063cb1b20011461153d578063e659ebef146115cd578063e985e9c51461160e575b600080fd5b34801561023657600080fd5b5061025f6004803603810190808035906020019092919080359060200190929190505050611689565b6040518082815260200191505060405180910390f35b34801561028157600080fd5b506102bf60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506116b9565b604051808215151515815260200191505060405180910390f35b3480156102e557600080fd5b506102ee611721565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032e578082015181840152602081019050610313565b50505050905090810190601f16801561035b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037557600080fd5b50610394600480360381019080803590602001909291905050506117c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e257600080fd5b50610421600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611800565b005b34801561042f57600080fd5b506104aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611945565b005b3480156104b857600080fd5b506104c16119c6565b6040518082815260200191505060405180910390f35b3480156104e357600080fd5b506104ec6119d3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561052c578082015181840152602081019050610511565b50505050905090810190601f1680156105595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561057357600080fd5b5061057c611a0c565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156105dc57600080fd5b50610657600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611a33565b604051808215151515815260200191505060405180910390f35b34801561067d57600080fd5b506106dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611aba565b005b3480156106ea57600080fd5b506107136004803603810190808035906020019092919080359060200190929190505050611bc7565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b5061073e611bf7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561077e578082015181840152602081019050610763565b50505050905090810190601f1680156107ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107c557600080fd5b506107e460048036038101908080359060200190929190505050611c30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083257600080fd5b50610871600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c63565b6040518082815260200191505060405180910390f35b34801561089357600080fd5b506108b260048036038101908080359060200190929190505050611cda565b604051808a815260200189815260200188815260200187815260200180602001806020018615151515815260200185151515158152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101561092857808201518184015260208101905061090d565b50505050905090810190601f1680156109555780820380516001836020036101000a031916815260200191505b50838103825287818151815260200191508051906020019080838360005b8381101561098e578082015181840152602081019050610973565b50505050905090810190601f1680156109bb5780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b3480156109de57600080fd5b506109e7611e81565b005b3480156109f557600080fd5b50610a54600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f24565b005b348015610a6257600080fd5b50610aa1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611f5c565b6040518082815260200191505060405180910390f35b348015610ac357600080fd5b50610acc611f8c565b6040518082815260200191505060405180910390f35b348015610aee57600080fd5b50610af7611f92565b6040518082815260200191505060405180910390f35b348015610b1957600080fd5b50610b3860048036038101908080359060200190929190505050611f98565b604051808215151515815260200191505060405180910390f35b348015610b5e57600080fd5b50610b7d6004803603810190808035906020019092919050505061200a565b6040518082815260200191505060405180910390f35b348015610b9f57600080fd5b50610bde600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612042565b6040518082815260200191505060405180910390f35b348015610c0057600080fd5b50610c1f60048036038101908080359060200190929190505050612072565b604051808581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610c6f578082015181840152602081019050610c54565b50505050905090810190601f168015610c9c5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610cd5578082015181840152602081019050610cba565b50505050905090810190601f168015610d025780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610d2057600080fd5b50610d296121e1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d69578082015181840152602081019050610d4e565b50505050905090810190601f168015610d965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610db057600080fd5b50610db961221a565b604051808215151515815260200191505060405180910390f35b348015610ddf57600080fd5b50610e08600480360381019080803590602001909291908035906020019092919050505061222d565b6040518082815260200191505060405180910390f35b348015610e2a57600080fd5b50610e496004803603810190808035906020019092919050505061225d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9757600080fd5b50610ea06122db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610eee57600080fd5b50610f23600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612301565b6040518082815260200191505060405180910390f35b348015610f4557600080fd5b50610f6460048036038101908080359060200190929190505050612385565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610fe4578082015181840152602081019050610fc9565b50505050905090810190601f1680156110115780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561104a57808201518184015260208101905061102f565b50505050905090810190601f1680156110775780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156110b0578082015181840152602081019050611095565b50505050905090810190601f1680156110dd5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b3480156110fd57600080fd5b50611132600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b2565b005b34801561114057600080fd5b5061116960048036038101908080359060200190929190803590602001909291905050506126b3565b6040518082815260200191505060405180910390f35b34801561118b57600080fd5b506111946126e3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111d45780820151818401526020810190506111b9565b50505050905090810190601f1680156112015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561121b57600080fd5b5061122461271c565b005b34801561123257600080fd5b5061125b60048036038101908080359060200190929190803590602001909291905050506127c0565b6040518082815260200191505060405180910390f35b34801561127d57600080fd5b506112866127f0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156112c65780820151818401526020810190506112ab565b50505050905090810190601f1680156112f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561130d57600080fd5b5061134e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612892565b005b34801561135c57600080fd5b50611401600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506129ce565b005b34801561140f57600080fd5b5061142e60048036038101908080359060200190929190505050612a0d565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815260200182151515158152602001965050505050505060405180910390f35b3480156114a357600080fd5b506114c260048036038101908080359060200190929190505050612a85565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156115025780820151818401526020810190506114e7565b50505050905090810190601f16801561152f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561154957600080fd5b50611552612b4e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015611592578082015181840152602081019050611577565b50505050905090810190601f1680156115bf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156115d957600080fd5b506115f860048036038101908080359060200190929190505050612b87565b6040518082815260200191505060405180910390f35b34801561161a57600080fd5b5061166f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b9f565b604051808215151515815260200191505060405180910390f35b6015602052816000526040600020818154811015156116a457fe5b90600052602060002001600091509150505481565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117b95780601f1061178e576101008083540402835291602001916117b9565b820191906000526020600020905b81548152906001019060200180831161179c57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061180b8261225d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561184857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061188857506118878133612b9f565b5b151561189357600080fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6119c2826000836040518082805190602001908083835b602083101515611981578051825260208201915060208101905060208303925061195c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020612c3390919063ffffffff16565b5050565b6000600a80549050905090565b6040805190810160405280601081526020017f496e41707050726f53686f704974656d0000000000000000000000000000000081525081565b6301ffc9a77c01000000000000000000000000000000000000000000000000000000000281565b6000611ab2836000846040518082805190602001908083835b602083101515611a715780518252602082019150602081019050602083039250611a4c565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020612c4c90919063ffffffff16565b905092915050565b80611ac53382612ca5565b1515611ad057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614151515611b0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611b4857600080fd5b611b528483612d3a565b611b5c8483612e3d565b611b668383613055565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b601860205281600052604060002081815481101515611be257fe5b90600052602060002001600091509150505481565b6040805190810160405280600481526020017f494150530000000000000000000000000000000000000000000000000000000081525081565b60136020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611c6e83612301565b82101515611c7b57600080fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515611cc757fe5b9060005260206000200154905092915050565b600f81815481101515611ce957fe5b9060005260206000209060080201600091509050806000015490806001015490806002015490806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611dad5780601f10611d8257610100808354040283529160200191611dad565b820191906000526020600020905b815481529060010190602001808311611d9057829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e4b5780601f10611e2057610100808354040283529160200191611e4b565b820191906000526020600020905b815481529060010190602001808311611e2e57829003601f168201915b5050505050908060060160009054906101000a900460ff16908060060160019054906101000a900460ff16908060070154905089565b611ec0336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff161515611edb57600080fd5b6000601c60006101000a81548160ff0219169083151502179055507f0e5e3b3fb504c22cf5c42fa07d521225937514c654007e1f12646f89768d6f9460405160405180910390a1565b80611f2f3382612ca5565b1515611f3a57600080fd5b611f5684848460206040519081016040528060008152506129ce565b50505050565b601960205281600052604060002081815481101515611f7757fe5b90600052602060002001600091509150505481565b60115481565b60125481565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60006120146119c6565b8210151561202157600080fd5b600a8281548110151561203057fe5b90600052602060002001549050919050565b60146020528160005260406000208181548110151561205d57fe5b90600052602060002001600091509150505481565b600e8181548110151561208157fe5b9060005260206000209060040201600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121395780601f1061210e57610100808354040283529160200191612139565b820191906000526020600020905b81548152906001019060200180831161211c57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121d75780601f106121ac576101008083540402835291602001916121d7565b820191906000526020600020905b8154815290600101906020018083116121ba57829003601f168201915b5050505050905084565b6040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e00000000000000000000000000000081525081565b601c60009054906101000a900460ff1681565b60166020528160005260406000208181548110151561224857fe5b90600052602060002001600091509150505481565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156122d257600080fd5b80915050919050565b601c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561233e57600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600d8181548110151561239457fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561246c5780601f106124415761010080835404028352916020019161246c565b820191906000526020600020905b81548152906001019060200180831161244f57829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561250a5780601f106124df5761010080835404028352916020019161250a565b820191906000526020600020905b8154815290600101906020018083116124ed57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125a85780601f1061257d576101008083540402835291602001916125a8565b820191906000526020600020905b81548152906001019060200180831161258b57829003601f168201915b5050505050905085565b6125f1336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff16151561260c57600080fd5b80601c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b601a602052816000526040600020818154811015156126ce57fe5b90600052602060002001600091509150505481565b6040805190810160405280600f81526020017f726f6c652f73686f702d6f776e6572000000000000000000000000000000000081525081565b61275b336040805190810160405280601181526020017f726f6c652f73797374656d2d61646d696e000000000000000000000000000000815250611945565b601c60009054906101000a900460ff1615151561277757600080fd5b6001601c60006101000a81548160ff0219169083151502179055507fab35696f06e428ebc5ceba8cd17f8fed287baf43440206d1943af1ee53e6d26760405160405180910390a1565b6017602052816000526040600020818154811015156127db57fe5b90600052602060002001600091509150505481565b606060078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128885780601f1061285d57610100808354040283529160200191612888565b820191906000526020600020905b81548152906001019060200180831161286b57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156128cd57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b816129d93382612ca5565b15156129e457600080fd5b6129ef858585611aba565b6129fb8585858561312c565b1515612a0657600080fd5b5050505050565b601081815481101515612a1c57fe5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b6060612a9082611f98565b1515612a9b57600080fd5b600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b425780601f10612b1757610100808354040283529160200191612b42565b820191906000526020600020905b815481529060010190602001808311612b2557829003601f168201915b50505050509050919050565b6040805190810160405280601481526020017f726f6c652f6672616e63686973652d6f776e657200000000000000000000000081525081565b601b6020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b612c3d8282612c4c565b1515612c4857600080fd5b5050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080612cb18361225d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d2057508373ffffffffffffffffffffffffffffffffffffffff16612d08846117c3565b73ffffffffffffffffffffffffffffffffffffffff16145b80612d315750612d308185612b9f565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16612d5a8261225d565b73ffffffffffffffffffffffffffffffffffffffff16141515612d7c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612e395760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6000806000612e4c858561334e565b60096000858152602001908152602001600020549250612eb86001600860008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061347d90919063ffffffff16565b9150600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515612f0657fe5b9060005260206000200154905080600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515612f6057fe5b90600052602060002001819055506000600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612fbc57fe5b9060005260206000200181905550600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361301c919061361f565b50600060096000868152602001908152602001600020819055508260096000838152602001908152602001600020819055505050505050565b60006130618383613496565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050906001820390600052602060002001600090919290919091505550806009600084815260200190815260200160002081905550505050565b60008061314e8573ffffffffffffffffffffffffffffffffffffffff166135f0565b151561315d5760019150613345565b8473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613252578082015181840152602081019050613237565b50505050905090810190601f16801561327f5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156132a157600080fd5b505af11580156132b5573d6000803e3d6000fd5b505050506040513d60208110156132cb57600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b8173ffffffffffffffffffffffffffffffffffffffff1661336e8261225d565b73ffffffffffffffffffffffffffffffffffffffff1614151561339057600080fd5b6133e36001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461347d90919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561348b57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561350457600080fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135a96001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461360390919063ffffffff16565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080823b905060008111915050919050565b6000818301905082811015151561361657fe5b80905092915050565b81548183558181111561364657818360005260206000209182019101613645919061364b565b5b505050565b61366d91905b80821115613669576000816000905550600101613651565b5090565b90565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820faf18a05d1505f52ed48d2fa9c41bfa3ab17ecb2553d8059e9d857074fa497720029",
  "sourceMap": "245:3283:0:-;;;1000:5;979:26;;;;;;;;;;;;;;;;;;;;380:195;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:195:0;387:10:3;;;;;;;;;;;;;;;;;;399:12;;;;;;;;;;;;;;;;;;648:38:9;273:10;667:18;;648;;;:38;;;:::i;:::-;2566::15;483:10;2585:18;;2566;;;:38;;;:::i;:::-;2610:44;1124:10;2629:24;;2610:18;;;:44;;;:::i;:::-;1714:5:17;1706;:13;;;;;;;;;;;;:::i;:::-;;1735:7;1725;:17;;;;;;;;;;;;:::i;:::-;;1822:48;575:10;1841:28;;1822:18;;;:48;;;:::i;:::-;1876:46;836:10;1895:26;;1876:18;;;:46;;;:::i;:::-;1651:276;;420:4:0;411:6;;:13;;;;;;;;;;;;;;;;;;482:35;490:10;502:14;;;;;;;;;;;;;;;;;;482:7;;;:35;;;:::i;:::-;527:41;535:10;547:20;;;;;;;;;;;;;;;;;;527:7;;;:41;;;:::i;:::-;245:3283;;986:156:9;1080:10;1064:26;;:12;:26;;;;;1056:35;;;;;;;;1133:4;1097:19;:33;1117:12;1097:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;986:156;:::o;1457:141:11:-;1528:27;1545:9;1528:5;1534;1528:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1528:12:11;;;;;;;;;;;;;;;;;;;;;:16;;;;;;:27;;;;;:::i;:::-;1576:9;1566:27;;;1587:5;1566:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1566:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:141;;:::o;321:96:12:-;408:4;388;:11;;:17;400:4;388:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;321:96;;:::o;245:3283:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "245:3283:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:50:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1547:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:142:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;774:142:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2021:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2021:70:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4597:111:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4597:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4093:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4093:277:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:114:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;947:114:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:87:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3290:87:17;;;;;;;;;;;;;;;;;;;;;;;483:54:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;483:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;229::9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:54:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1201:136:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:136:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6088:342:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6088:342:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:46:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1894:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;608:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;608:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1298:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1298:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2945:203:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2945:203:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:17:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:17:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;864:17:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;864:17:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3411:114:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3411:114:0;;;;;;7046:225:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7046:225:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:48:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1033:31:3;;;;;;;;;;;;;;;;;;;;;;;1193:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1193:34:3;;;;;;;;;;;;;;;;;;;;;;;3548:140:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3548:140:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701::17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:140:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1428:48:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1428:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;785:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;785:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;785:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1205:59:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1205:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1205:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:49:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1667:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3206:164:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3206:164:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:33:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1097:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2851:142:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2851:142:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;707:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;707:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;707:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;707:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2923:169:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2923:169:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:47:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2137:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:58:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1321:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3194:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3194:112:0;;;;;;1782:46:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1782:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:74:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:74:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2189:74:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4988:205:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4988:205:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7953:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7953:302:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:133:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2451:133:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2451:133:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:68:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1440:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2269:48:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2269:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5502:168:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5502:168:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;774:142:9:-;857:4;878:19;:33;898:12;878:33;;;;;;;;;;;;;;;;;;;;;;;;;;;871:40;;774:142;;;:::o;2021:70:17:-;2060:6;2081:5;2074:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;:::o;4597:111:15:-;4657:7;4679:14;:24;4694:8;4679:24;;;;;;;;;;;;;;;;;;;;;4672:31;;4597:111;;;:::o;4093:277::-;4154:13;4170:17;4178:8;4170:7;:17::i;:::-;4154:33;;4208:5;4201:12;;:3;:12;;;;4193:21;;;;;;;;4242:5;4228:19;;:10;:19;;;:58;;;;4251:35;4268:5;4275:10;4251:16;:35::i;:::-;4228:58;4220:67;;;;;;;;4321:3;4294:14;:24;4309:8;4294:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4356:8;4351:3;4335:30;;4344:5;4335:30;;;;;;;;;;;;4093:277;;;:::o;947:114:11:-;1027:29;1046:9;1027:5;1033;1027:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1027:12:11;;;;;;;;;;;;;;;;;;;;;:18;;:29;;;;:::i;:::-;947:114;;:::o;3290:87:17:-;3334:7;3356:9;:16;;;;3349:23;;3290:87;:::o;483:54:3:-;;;;;;;;;;;;;;;;;;;;:::o;229::9:-;273:10;229:54;;;:::o;1201:136:11:-;1284:4;1305:27;1322:9;1305:5;1311;1305:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1305:12:11;;;;;;;;;;;;;;;;;;;;;:16;;:27;;;;:::i;:::-;1298:34;;1201:136;;;;:::o;6088:342:15:-;6199:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;6242:1;6225:19;;:5;:19;;;;6217:28;;;;;;;;6274:1;6259:17;;:3;:17;;;;6251:26;;;;;;;;6284:30;6298:5;6305:8;6284:13;:30::i;:::-;6320:32;6336:5;6343:8;6320:15;:32::i;:::-;6358:25;6369:3;6374:8;6358:10;:25::i;:::-;6416:8;6411:3;6395:30;;6404:5;6395:30;;;;;;;;;;;;6088:342;;;;:::o;1894:46:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;608:44::-;;;;;;;;;;;;;;;;;;;;:::o;1298:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;2945:203:17:-;3051:7;3085:17;3095:6;3085:9;:17::i;:::-;3076:6;:26;3068:35;;;;;;;;3116:11;:19;3128:6;3116:19;;;;;;;;;;;;;;;3136:6;3116:27;;;;;;;;;;;;;;;;;;3109:34;;2945:203;;;;:::o;864:17:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3411:114:0:-;1626:37;1636:10;1648:14;;;;;;;;;;;;;;;;;;1626:9;:37::i;:::-;2407:6;;;;;;;;;;;2399:15;;;;;;;;3480:5;3471:6;;:14;;;;;;;;;;;;;;;;;;3500:18;;;;;;;;;;3411:114::o;7046:225:15:-;7161:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;7224:42;7241:5;7248:3;7253:8;7224:42;;;;;;;;;;;;;:16;:42::i;:::-;7046:225;;;;:::o;2023:48:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1033:31::-;;;;:::o;1193:34::-;;;;:::o;3548:140:15:-;3603:4;3615:13;3631:10;:20;3642:8;3631:20;;;;;;;;;;;;;;;;;;;;;3615:36;;3681:1;3664:19;;:5;:19;;;;3657:26;;3548:140;;;;:::o;3701::17:-;3760:7;3792:13;:11;:13::i;:::-;3783:6;:22;3775:31;;;;;;;;3819:9;3829:6;3819:17;;;;;;;;;;;;;;;;;;3812:24;;3701:140;;;:::o;1428:48:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;785:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1205:59:0:-;;;;;;;;;;;;;;;;;;;;:::o;979:26::-;;;;;;;;;;;;;:::o;1667:49:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3206:164:15:-;3262:7;3277:13;3293:10;:20;3304:8;3293:20;;;;;;;;;;;;;;;;;;;;;3277:36;;3344:1;3327:19;;:5;:19;;;;3319:28;;;;;;;;3360:5;3353:12;;3206:164;;;;:::o;1097:33:0:-;;;;;;;;;;;;;:::o;2851:142:15:-;2907:7;2948:1;2930:20;;:6;:20;;;;2922:29;;;;;;;;2964:16;:24;2981:6;2964:24;;;;;;;;;;;;;;;;2957:31;;2851:142;;;:::o;707:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2923:169:0:-;1626:37;1636:10;1648:14;;;;;;;;;;;;;;;;;;1626:9;:37::i;:::-;2407:6;;;;;;;;;;;2399:15;;;;;;;;3031:11;3010:18;;:32;;;;;;;;;;;;;;;;;;3057:28;3073:11;3057:28;;;;;;;;;;;;;;;;;;;;;;2923:169;:::o;2137:47:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1321:58:0:-;;;;;;;;;;;;;;;;;;;;:::o;3194:112::-;1626:37;1636:10;1648:14;;;;;;;;;;;;;;;;;;1626:9;:37::i;:::-;2237:6;;;;;;;;;;;2236:7;2228:16;;;;;;;;3264:4;3255:6;;:13;;;;;;;;;;;;;;;;;;3283:16;;;;;;;;;;3194:112::o;1782:46:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2189:74:17:-;2230:6;2251:7;2244:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:74;:::o;4988:205:15:-;5072:10;5065:17;;:3;:17;;;;5057:26;;;;;;;;5126:9;5089:17;:29;5107:10;5089:29;;;;;;;;;;;;;;;:34;5119:3;5089:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;5173:3;5146:42;;5161:10;5146:42;;;5178:9;5146:42;;;;;;;;;;;;;;;;;;;;;;4988:205;;:::o;7953:302::-;8085:8;2404:39;2422:10;2434:8;2404:17;:39::i;:::-;2396:48;;;;;;;;8103:34;8116:5;8123:3;8128:8;8103:12;:34::i;:::-;8196:53;8221:5;8228:3;8233:8;8243:5;8196:24;:53::i;:::-;8188:62;;;;;;;;7953:302;;;;;:::o;936:19:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2451:133:17:-;2508:6;2530:16;2537:8;2530:6;:16::i;:::-;2522:25;;;;;;;;2560:9;:19;2570:8;2560:19;;;;;;;;;;;2553:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:133;;;:::o;1440:68:0:-;;;;;;;;;;;;;;;;;;;;:::o;2269:48:3:-;;;;;;;;;;;;;;;;;:::o;5502:168:15:-;5608:4;5629:17;:25;5647:6;5629:25;;;;;;;;;;;;;;;:36;5655:9;5629:36;;;;;;;;;;;;;;;;;;;;;;;;;5622:43;;5502:168;;;;:::o;658:107:12:-;744:15;748:4;754;744:3;:15::i;:::-;736:24;;;;;;;;658:107;;:::o;843:124::-;924:4;945;:11;;:17;957:4;945:17;;;;;;;;;;;;;;;;;;;;;;;;;938:24;;843:124;;;;:::o;8602:438:15:-;8712:4;8726:13;8742:17;8750:8;8742:7;:17::i;:::-;8726:33;;8938:5;8926:17;;:8;:17;;;:60;;;;8978:8;8953:33;;:21;8965:8;8953:11;:21::i;:::-;:33;;;8926:60;:103;;;;8996:33;9013:5;9020:8;8996:16;:33::i;:::-;8926:103;8911:124;;8602:438;;;;;:::o;10094:214::-;10195:6;10174:27;;:17;10182:8;10174:7;:17::i;:::-;:27;;;10166:36;;;;;;;;10248:1;10212:38;;:14;:24;10227:8;10212:24;;;;;;;;;;;;;;;;;;;;;:38;;;;10208:96;;;10295:1;10260:14;:24;10275:8;10260:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10208:96;10094:214;;:::o;4964:856:17:-;5082:18;5135:22;5198:17;5037:38;5059:5;5066:8;5037:21;:38::i;:::-;5103:16;:26;5120:8;5103:26;;;;;;;;;;;;5082:47;;5160:32;5190:1;5160:11;:18;5172:5;5160:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;5135:57;;5218:11;:18;5230:5;5218:18;;;;;;;;;;;;;;;5237:14;5218:34;;;;;;;;;;;;;;;;;;5198:54;;5292:9;5259:11;:18;5271:5;5259:18;;;;;;;;;;;;;;;5278:10;5259:30;;;;;;;;;;;;;;;;;:42;;;;5344:1;5307:11;:18;5319:5;5307:18;;;;;;;;;;;;;;;5326:14;5307:34;;;;;;;;;;;;;;;;;:38;;;;5706:11;:18;5718:5;5706:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;5768:1;5739:16;:26;5756:8;5739:26;;;;;;;;;;;:30;;;;5805:10;5775:16;:27;5792:9;5775:27;;;;;;;;;;;:40;;;;4964:856;;;;;:::o;4459:226::-;4562:14;4525:31;4542:3;4547:8;4525:16;:31::i;:::-;4579:11;:16;4591:3;4579:16;;;;;;;;;;;;;;;:23;;;;4562:40;;4608:11;:16;4620:3;4608:16;;;;;;;;;;;;;;;4630:8;4608:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4608:31:17;;;;;;;;;;;;;;;;;;;;;;4674:6;4645:16;:26;4662:8;4645:26;;;;;;;;;;;:35;;;;4459:226;;;:::o;11774:347:15:-;11913:4;11981:13;11932:16;:3;:14;;;:16::i;:::-;11931:17;11927:49;;;11965:4;11958:11;;;;11927:49;12012:3;11997:36;;;12041:10;12053:5;12060:8;12070:5;11997:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11997:79:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11997:79:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11997:79:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11997:79:15;;;;;;;;;;;;;;;;11981:95;;1488:10;12100:15;;12090:25;;;:6;:25;;;;12082:34;;11774:347;;;;;;;;:::o;11054:214::-;11156:5;11135:26;;:17;11143:8;11135:7;:17::i;:::-;:26;;;11127:35;;;;;;;;11194:30;11222:1;11194:16;:23;11211:5;11194:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;11168:16;:23;11185:5;11168:23;;;;;;;;;;;;;;;:56;;;;11261:1;11230:10;:20;11241:8;11230:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;11054:214;;:::o;1042:110:10:-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;10571:204:15:-;10677:1;10645:34;;:10;:20;10656:8;10645:20;;;;;;;;;;;;;;;;;;;;;:34;;;10637:43;;;;;;;;10709:3;10686:10;:20;10697:8;10686:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;10742:28;10768:1;10742:16;:21;10759:3;10742:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;10718:16;:21;10735:3;10718:21;;;;;;;;;;;;;;;:52;;;;10571:204;;:::o;437:576:7:-;494:4;506:12;981:4;969:17;961:25;;1007:1;1000:4;:8;993:15;;437:576;;;;:::o;1214:123:10:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;245:3283:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;321:96:12:-;408:4;388;:11;;:17;400:4;388:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;321:96;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/ownership/RBAC/RBAC.sol\";\nimport \"./ProShopBase.sol\";\n\n\n/**\n * @title AccessControl\n * @notice Role-based access control and related functions, function modifiers, and events\n */\ncontract AccessControl is RBAC, ProShopBase {\n\n    /**\n     * @dev constructor. Sets msg.sender as system admin by default\n     */\n    constructor() public {\n        paused = true; // Start paused. un-paused after full migration\n        addRole(msg.sender, ROLE_SYS_ADMIN);\n        addRole(msg.sender, ROLE_FRANCHISE_OWNER);\n    }\n\n    /**\n     * @dev event emitted when contract is upgraded\n     */\n    event ContractUpgrade(address newContract);\n\n    /**\n     * @dev event emitted when contract is paused\n     */\n    event ContractPaused();\n\n    /**\n     * @dev event emitted when contract is un-npaused\n     */\n    event ContractUnpaused();\n\n    /**\n     * @dev state variable indicating whether the contract is paused\n     */\n    bool public paused = false;\n\n    /**\n     * Set in case the contract is broken and an upgrade is required\n     */\n    address public newContractAddress;\n\n    /**\n     * Role name for administrator of entire system\n     */\n    string public constant ROLE_SYS_ADMIN = \"role/system-admin\";\n\n    /**\n     * Role name for shop owners.\n     */\n    string public constant ROLE_SHOP_OWNER = \"role/shop-owner\";\n\n    /**\n     * Role name for franchise owner.\n     */\n    string public constant ROLE_FRANCHISE_OWNER = \"role/franchise-owner\";\n\n    /**\n     * @dev modifier to scope access to system administrator\n     */\n    modifier onlySysAdmin() {\n        checkRole(msg.sender, ROLE_SYS_ADMIN);\n        _;\n    }\n\n    /**\n     * @dev modifier to scope access to franchise owner\n     */\n    modifier onlyFranchiseOwner() {\n        checkRole(msg.sender, ROLE_FRANCHISE_OWNER);\n        _;\n    }\n\n    /**\n     * @dev modifier to scope access to owner of given shop\n     */\n    modifier onlyShopOwner(uint256 _shopId) {\n        address owner = shopToOwner[_shopId];\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     */\n    modifier whenPaused() {\n        require(paused);\n        _;\n    }\n\n    /**\n     * @dev Used to mark the smart contract as upgraded, in case there is a serious\n     *      breaking bug. This method only keeps track of the new contract and emits\n     *      a message indicating that the new address is set. It's up to clients of\n     *      contract to update to the new contract address in that case.\n     *      This contract will be paused indefinitely if such an upgrade takes place.\n     *\n     * @param _newAddress address of new contract\n     */\n    function setNewAddress(address _newAddress) external onlySysAdmin whenPaused {\n        newContractAddress = _newAddress;\n        emit ContractUpgrade(_newAddress);\n    }\n\n    /**\n     * @dev called by the system administrator to pause, triggers stopped state\n     */\n    function pause() public onlySysAdmin whenNotPaused {\n        paused = true;\n        emit ContractPaused();\n    }\n\n    /**\n     * @dev called by the ystem administrator to un-pause, returns to normal state\n     */\n    function unpause() public onlySysAdmin whenPaused {\n        paused = false;\n        emit ContractUnpaused();\n    }\n\n}",
  "sourcePath": "/Users/cliff/Documents/in-app-pro-shop/contracts/AccessControl.sol",
  "ast": {
    "absolutePath": "/Users/cliff/Documents/in-app-pro-shop/contracts/AccessControl.sol",
    "exportedSymbols": {
      "AccessControl": [
        154
      ]
    },
    "id": 155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/RBAC/RBAC.sol",
        "file": "openzeppelin-solidity/contracts/ownership/RBAC/RBAC.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 1346,
        "src": "26:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cliff/Documents/in-app-pro-shop/contracts/ProShopBase.sol",
        "file": "./ProShopBase.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 652,
        "src": "92:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "RBAC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "271:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBAC_$1345",
                "typeString": "contract RBAC"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "271:4:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ProShopBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "277:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProShopBase_$651",
                "typeString": "contract ProShopBase"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "277:11:0"
          }
        ],
        "contractDependencies": [
          651,
          1093,
          1144,
          1442,
          1345,
          1462,
          1469,
          2163,
          1579,
          2569
        ],
        "contractKind": "contract",
        "documentation": "@title AccessControl\n@notice Role-based access control and related functions, function modifiers, and events",
        "fullyImplemented": true,
        "id": 154,
        "linearizedBaseContracts": [
          154,
          651,
          2569,
          1469,
          1462,
          1442,
          2163,
          1579,
          1144,
          1093,
          1345
        ],
        "name": "AccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "401:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "411:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "420:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "411:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "411:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "490:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "490:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17,
                        "name": "ROLE_SYS_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "502:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 14,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "482:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "482:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "535:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "535:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "ROLE_FRANCHISE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "547:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 20,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "527:41:0"
                }
              ]
            },
            "documentation": "@dev constructor. Sets msg.sender as system admin by default",
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:0:0"
            },
            "scope": 154,
            "src": "380:195:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is upgraded",
            "id": 31,
            "name": "ContractUpgrade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "671:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "670:21:0"
            },
            "src": "649:43:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is paused",
            "id": 33,
            "name": "ContractPaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:0"
            },
            "src": "764:23:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is un-npaused",
            "id": 35,
            "name": "ContractUnpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:2:0"
            },
            "src": "863:25:0"
          },
          {
            "constant": false,
            "id": 38,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "979:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "979:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1000:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1097:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1097:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 43,
            "name": "ROLE_SYS_ADMIN",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1205:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f73797374656d2d61646d696e",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1245:19:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2603b8aa22c80ea871ee635aa3db88cb33107f943e69e828417810f94e453558",
                "typeString": "literal_string \"role/system-admin\""
              },
              "value": "role/system-admin"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 46,
            "name": "ROLE_SHOP_OWNER",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1321:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1321:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f73686f702d6f776e6572",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1362:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_561198595a5f8521bc88dad09e1d855b03ef97e598bea80e176a4eba000d7bde",
                "typeString": "literal_string \"role/shop-owner\""
              },
              "value": "role/shop-owner"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 49,
            "name": "ROLE_FRANCHISE_OWNER",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1440:68:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1440:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f6672616e63686973652d6f776e6572",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1486:22:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6614c7c9c4513748c8cc266084ef2d5cd3658c5ee82833b4fbca19c31dcf6f6e",
                "typeString": "literal_string \"role/franchise-owner\""
              },
              "value": "role/franchise-owner"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "1616:65:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "1636:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1636:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ROLE_SYS_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1648:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 51,
                      "name": "checkRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "1626:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) view"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:37:0"
                },
                {
                  "id": 57,
                  "nodeType": "PlaceholderStatement",
                  "src": "1673:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to system administrator",
            "id": 59,
            "name": "onlySysAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:2:0"
            },
            "src": "1592:89:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1789:71:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "1809:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1809:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "ROLE_FRANCHISE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1821:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 61,
                      "name": "checkRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "1799:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) view"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:43:0"
                },
                {
                  "id": 67,
                  "nodeType": "PlaceholderStatement",
                  "src": "1852:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to franchise owner",
            "id": 69,
            "name": "onlyFranchiseOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:0"
            },
            "src": "1759:101:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1982:102:0",
              "statements": [
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1992:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "shopToOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "2008:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 77,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "_shopId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2020:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2008:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1992:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "2046:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "2060:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:28:0"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "2076:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to owner of given shop",
            "id": 88,
            "name": "onlyShopOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_shopId",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1965:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:17:0"
            },
            "src": "1942:142:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "2218:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2236:7:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 91,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2237:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:16:0"
                },
                {
                  "id": 95,
                  "nodeType": "PlaceholderStatement",
                  "src": "2254:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 97,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:2:0"
            },
            "src": "2193:69:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "2389:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2407:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2399:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:15:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "2424:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 105,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:0"
            },
            "src": "2367:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "3000:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3010:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3031:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3010:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "3073:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 118,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3057:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "EmitStatement",
                  "src": "3052:33:0"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n     breaking bug. This method only keeps track of the new contract and emits\n     a message indicating that the new address is set. It's up to clients of\n     contract to update to the new contract address in that case.\n     This contract will be paused indefinitely if such an upgrade takes place.\n     * @param _newAddress address of new contract",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 109,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "2976:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2976:12:0"
              },
              {
                "arguments": null,
                "id": 112,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 111,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "2989:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2989:10:0"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2946:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2945:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3000:0:0"
            },
            "scope": 154,
            "src": "2923:169:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "3245:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3255:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3264:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3255:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:13:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 134,
                      "name": "ContractPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3283:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "EmitStatement",
                  "src": "3278:21:0"
                }
              ]
            },
            "documentation": "@dev called by the system administrator to pause, triggers stopped state",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 125,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "3218:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3218:12:0"
              },
              {
                "arguments": null,
                "id": 128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 127,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3231:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3231:13:0"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3208:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:0:0"
            },
            "scope": 154,
            "src": "3194:112:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "3461:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3471:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3480:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3471:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 149,
                      "name": "ContractUnpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3500:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "EmitStatement",
                  "src": "3495:23:0"
                }
              ]
            },
            "documentation": "@dev called by the ystem administrator to un-pause, returns to normal state",
            "id": 153,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "3437:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3437:12:0"
              },
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "3450:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3450:10:0"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3427:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3461:0:0"
            },
            "scope": 154,
            "src": "3411:114:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 155,
        "src": "245:3283:0"
      }
    ],
    "src": "0:3528:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/cliff/Documents/in-app-pro-shop/contracts/AccessControl.sol",
    "exportedSymbols": {
      "AccessControl": [
        154
      ]
    },
    "id": 155,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/RBAC/RBAC.sol",
        "file": "openzeppelin-solidity/contracts/ownership/RBAC/RBAC.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 1346,
        "src": "26:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/cliff/Documents/in-app-pro-shop/contracts/ProShopBase.sol",
        "file": "./ProShopBase.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 155,
        "sourceUnit": 652,
        "src": "92:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "RBAC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1345,
              "src": "271:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBAC_$1345",
                "typeString": "contract RBAC"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "271:4:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ProShopBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 651,
              "src": "277:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProShopBase_$651",
                "typeString": "contract ProShopBase"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "277:11:0"
          }
        ],
        "contractDependencies": [
          651,
          1093,
          1144,
          1442,
          1345,
          1462,
          1469,
          2163,
          1579,
          2569
        ],
        "contractKind": "contract",
        "documentation": "@title AccessControl\n@notice Role-based access control and related functions, function modifiers, and events",
        "fullyImplemented": true,
        "id": 154,
        "linearizedBaseContracts": [
          154,
          651,
          2569,
          1469,
          1462,
          1442,
          2163,
          1579,
          1144,
          1093,
          1345
        ],
        "name": "AccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "401:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "411:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "420:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "411:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "411:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 15,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "490:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "490:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17,
                        "name": "ROLE_SYS_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "502:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 14,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "482:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19,
                  "nodeType": "ExpressionStatement",
                  "src": "482:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 21,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "535:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "535:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "ROLE_FRANCHISE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "547:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 20,
                      "name": "addRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "527:41:0"
                }
              ]
            },
            "documentation": "@dev constructor. Sets msg.sender as system admin by default",
            "id": 27,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:0:0"
            },
            "scope": 154,
            "src": "380:195:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is upgraded",
            "id": 31,
            "name": "ContractUpgrade",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "name": "newContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 31,
                  "src": "671:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "670:21:0"
            },
            "src": "649:43:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is paused",
            "id": 33,
            "name": "ContractPaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "784:2:0"
            },
            "src": "764:23:0"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitted when contract is un-npaused",
            "id": 35,
            "name": "ContractUnpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:2:0"
            },
            "src": "863:25:0"
          },
          {
            "constant": false,
            "id": 38,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "979:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "979:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1000:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1097:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1097:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 43,
            "name": "ROLE_SYS_ADMIN",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1205:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f73797374656d2d61646d696e",
              "id": 42,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1245:19:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2603b8aa22c80ea871ee635aa3db88cb33107f943e69e828417810f94e453558",
                "typeString": "literal_string \"role/system-admin\""
              },
              "value": "role/system-admin"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 46,
            "name": "ROLE_SHOP_OWNER",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1321:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 44,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1321:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f73686f702d6f776e6572",
              "id": 45,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1362:17:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_561198595a5f8521bc88dad09e1d855b03ef97e598bea80e176a4eba000d7bde",
                "typeString": "literal_string \"role/shop-owner\""
              },
              "value": "role/shop-owner"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 49,
            "name": "ROLE_FRANCHISE_OWNER",
            "nodeType": "VariableDeclaration",
            "scope": 154,
            "src": "1440:68:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 47,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1440:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "726f6c652f6672616e63686973652d6f776e6572",
              "id": 48,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1486:22:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6614c7c9c4513748c8cc266084ef2d5cd3658c5ee82833b4fbca19c31dcf6f6e",
                "typeString": "literal_string \"role/franchise-owner\""
              },
              "value": "role/franchise-owner"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "1616:65:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 52,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "1636:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1636:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "ROLE_SYS_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1648:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 51,
                      "name": "checkRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "1626:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) view"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:37:0"
                },
                {
                  "id": 57,
                  "nodeType": "PlaceholderStatement",
                  "src": "1673:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to system administrator",
            "id": 59,
            "name": "onlySysAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:2:0"
            },
            "src": "1592:89:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "1789:71:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2584,
                          "src": "1809:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1809:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "ROLE_FRANCHISE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1821:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 61,
                      "name": "checkRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1275,
                      "src": "1799:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) view"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1799:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1799:43:0"
                },
                {
                  "id": 67,
                  "nodeType": "PlaceholderStatement",
                  "src": "1852:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to franchise owner",
            "id": 69,
            "name": "onlyFranchiseOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:2:0"
            },
            "src": "1759:101:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1982:102:0",
              "statements": [
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1992:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 75,
                      "name": "shopToOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "2008:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 77,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "_shopId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2020:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2008:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1992:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "2046:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2046:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "2060:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2046:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2038:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:28:0"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "2076:1:0"
                }
              ]
            },
            "documentation": "@dev modifier to scope access to owner of given shop",
            "id": 88,
            "name": "onlyShopOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_shopId",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1965:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:17:0"
            },
            "src": "1942:142:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "2218:44:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2236:7:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 91,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2237:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:16:0"
                },
                {
                  "id": 95,
                  "nodeType": "PlaceholderStatement",
                  "src": "2254:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 97,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:2:0"
            },
            "src": "2193:69:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "2389:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2407:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2587,
                        2588
                      ],
                      "referencedDeclaration": 2587,
                      "src": "2399:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:15:0"
                },
                {
                  "id": 103,
                  "nodeType": "PlaceholderStatement",
                  "src": "2424:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 105,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:0"
            },
            "src": "2367:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "3000:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3010:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "_newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3031:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3010:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "3010:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "_newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "3073:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 118,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "3057:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "EmitStatement",
                  "src": "3052:33:0"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n     breaking bug. This method only keeps track of the new contract and emits\n     a message indicating that the new address is set. It's up to clients of\n     contract to update to the new contract address in that case.\n     This contract will be paused indefinitely if such an upgrade takes place.\n     * @param _newAddress address of new contract",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 109,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "2976:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2976:12:0"
              },
              {
                "arguments": null,
                "id": 112,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 111,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "2989:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2989:10:0"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2946:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2945:21:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3000:0:0"
            },
            "scope": 154,
            "src": "2923:169:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "3245:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 130,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3255:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3264:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3255:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "3255:13:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 134,
                      "name": "ContractPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "3283:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "EmitStatement",
                  "src": "3278:21:0"
                }
              ]
            },
            "documentation": "@dev called by the system administrator to pause, triggers stopped state",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 125,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "3218:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3218:12:0"
              },
              {
                "arguments": null,
                "id": 128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 127,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3231:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3231:13:0"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3208:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:0:0"
            },
            "scope": 154,
            "src": "3194:112:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 152,
              "nodeType": "Block",
              "src": "3461:64:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 145,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "3471:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3480:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3471:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "3471:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 149,
                      "name": "ContractUnpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "3500:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "EmitStatement",
                  "src": "3495:23:0"
                }
              ]
            },
            "documentation": "@dev called by the ystem administrator to un-pause, returns to normal state",
            "id": 153,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlySysAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 59,
                  "src": "3437:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3437:12:0"
              },
              {
                "arguments": null,
                "id": 143,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 142,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "3450:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3450:10:0"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3427:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3461:0:0"
            },
            "scope": 154,
            "src": "3411:114:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 155,
        "src": "245:3283:0"
      }
    ],
    "src": "0:3528:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-04T17:27:38.532Z"
}